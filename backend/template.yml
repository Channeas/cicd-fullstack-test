Resources:
  # Lambda function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: BackendS3Bucket
        S3Key: lambda/main.zip
      Handler: index.handler
      Role: !GetAtt [LambdaRole, Arn]
      Runtime: nodejs12.x
      Tags:
        - Key: Type
          Value: Learning
        - Key: Creator
          Value: CloudFormation

  # API
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Backend Test Lambda API
      Description: A Lambda API
      ProtocolType: HTTP

  # API integration
  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      CredentialsArn: !GetAtt [IntegrationRole, Arn]
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt [LambdaFunction, Arn]
      PayloadFormatVersion: 2.0

  # API stage
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      AutoDeploy: true
      StageName: $default

  # API route
  Route:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: $default
      Target: !Join
        - /
        - - integrations
          - !Ref Integration

  # IAM role for the Lambda function
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      # Lambda permissions
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*

  # IAM role for the API integration
  IntegrationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
      # Integration permissions
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: !GetAtt [LambdaFunction, Arn]

Parameters:
  BackendS3Bucket:
    Type: String
    Description: The name of the backend S3 bucket
